{% extends 'base.html.twig' %}

{% block title %}Hello SurveyController!{% endblock %}

{% block body %}

<style>
    .example-wrapper { margin: 1em auto; max-width: 1000px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
        label {
                float: left;
                margin-right: 10px;
        }

        ul {
                list-style-type: none;
        }

        textarea {
            resize: none;
            width: 500px;
            height: 30px;
        }

        .question {
                border: 1px solid lightgray;
                border-radius: 10px;
                padding: 20px 200px 20px 20px;
                margin-top: 20px;
        }

        .del_link_question {
                margin-right: -150px;
                float: right;
                margin-top: -30px;
        }

        .del_link_question button {
                color: darkred;
                font-weight: 600;
        }

        .link_add_question {
                margin-top: 20px;
                text-align: center;
        }

        .del_link_answer {
                float: right;
                margin-top: -40px;
        }

        #survey_save {
                font-size: 20px;
        }
        input#survey_title {
             width: 500px;
        }
        .errors-list {
                color: red;
        }


</style>


<div class="example-wrapper">

        {{ form_start(form) }}
        <div class="errors-list">{{ form_errors(form) }}</div>
        {{ form_label(form.title) }}{{ form_widget(form.title) }}<div class="errors-list">{{ form_errors(form.title) }}</div>
        {{ form_label(form.status) }}{{ form_widget(form.status) }}<div class="errors-list">{{ form_errors(form.status) }}</div>

        <ul class="questions"
            data-prototype-answer="{{ form_widget(form.questions.vars.prototype.children['answers'].vars.prototype)|e }}"
            data-prototype-question="{{ form_widget(form.questions.vars.prototype)|e }}">
            {% for question in form.questions %}
                <div  class="question" style="margin-top: 20px">
                        {{ form_row(question.text) }}
                        {{ form_row(question.type) }}
                        {{ form_row(question.required) }}
                        <ul class="answers" data-prototype="{{ form_widget(question.answers.vars.prototype)|e }}">
                                {% for answer in question.answers %}
                                        <div class="answer">{{ form_row(answer.text) }}</div>
                                {% endfor %}
                        </ul>
                </div>
            {% endfor %}
        </ul>

    {{ form_end(form) }}

        <script>

                function Survey(params) {
                        //сохраняем контекст в переменную и делаем ссылку добавления полей
                        var they = this;
                        var $linkAdd = $('<a style="margin-top: 20px;" href="#"><button>Добавить ' + params.nameDomEl + '</button></a>');
                        var $newLinkLi = $('<li></li>').append($linkAdd).addClass('link_add_' + params.domElClass);
                        //добавляем ссылку удаления новым элементам, которые можно удалять(оставляя минимально допустимое количество)
                        // console.log(params.collectionHolder);


                        this.addFormDeleteLink = function(newFormLi) {
                                //создаем ссылку удаления
                                var $removeFormLink = $('<li></li>').append('<a href="#"><button>Удалить '+ params.nameDomEl +'</button></a>').addClass('del_link_' + params.domElClass);
                                newFormLi.append($removeFormLink);
                                //удаляем поля при клике на неё
                                $removeFormLink.on('click', function(e) {
                                        e.preventDefault();
                                        newFormLi.remove();
                                });
                        }
                        //добавляем ссылки удаления полей
                        params.collectionHolder.find('.' + params.domElClass).each(function () {
                                they.addFormDeleteLink($(this));
                        })

                        //добавляем ссылки добавления полей
                        params.collectionHolder.each(function () {
                                $newLinkLi = $('<li></li>').append($linkAdd).addClass('link_add_' + params.domElClass);
                            $(this).append($newLinkLi);
                        })
                        //сохраняем в индекс количество дочерних элементов
                        params.collectionHolder.each(function () {
                            $(this).data('index', $(this).find('.' + params.domElClass).length);
                        })
                        //при клике добавляем ещё один элемент формы
                        $linkAdd.on('click', function (e) {
                            e.preventDefault();
                            they.addForm($(this).parents('.' + params.domElementsClass), $newLinkLi);
                        })

                //получаем и инкрементируем прототип коллекции
                    this.addForm = function() {
                        //проверяем не является ли экземпляром создания ответа
                        if (params.collectionHolder.data(params.prototypeAttr)) {
                            var prototype = params.collectionHolder.data(params.prototypeAttr);
                            // console.log(prototype);
                        } else {
                            var prototype = params.prototype_data;
                            // console.log(prototype);
                        }
                        var index = params.collectionHolder.data('index');
                        var newForm = prototype;
                        params.collectionHolder.data('index', index + 1);
                //добавляем значение индекса в имена дочерхних полей портотипа, для новых вопросов добавляем сразу 2 прототипа ответа
                        var $newFormLi;
                        if (params.domElClass === 'question') {
                                var prototypeAnsw = params.collectionHolder.data('prototype-answer')
                                var intanceAnsw1 = prototypeAnsw.replace(new RegExp(params.prototypeName,'g'), index).replace(new RegExp('__answer_prot__', 'g'), 0);
                                var intanceAnsw2 = prototypeAnsw.replace(new RegExp(params.prototypeName,'g'), index).replace(new RegExp('__answer_prot__', 'g'), 1);
                                var ulAnswersPlus2Answers = $('<ul class="answers"></ul>').append(intanceAnsw1).append(intanceAnsw2);
                                ulAnswersPlus2Answers.children().each(function() {
                                    $(this).addClass('answer');
                                });
                                newForm = newForm.replace(new RegExp(params.prototypeName, 'g'), index);
                                params.collectionHolder.data('index', index + 1);
                                console.log(params.collectionHolder);
                                $newFormLi = $(newForm).addClass(params.domElClass).append(ulAnswersPlus2Answers);
                                //новый объект создания ответов в вопросах по клику
                                console.log($newFormLi);
                                var newAnswersObj = new Survey({
                                        nameDomEl: 'ответ',
                                        collectionHolder: $newFormLi.find('ul.answers'),
                                        domElClass: 'answer',
                                        domElementsClass: 'answers',
                                        prototypeAttr: 'prototype-answer',
                                        prototype_data: prototypeAnsw,
                                        prototypeName: '__answer_prot__',
                                        questionIndex: index,
                                        questionPrototypeName: params.prototypeName,
                                        minDomEl: 2,
                                })

                        } else {
                                if(params.questionPrototypeName) {
                                    newForm = newForm.replace(new RegExp(params.questionPrototypeName, 'g'), params.questionIndex);
                                }
                                newForm = newForm.replace(new RegExp(params.prototypeName, 'g'), index);
                                params.collectionHolder.data('index', index + 1);
                                $newFormLi = $(newForm).addClass(params.domElClass);
                        }
                //добавляем в форму новые поля и ссылку на их удаление
                        $newLinkLi.before($newFormLi);
                        this.addFormDeleteLink($newFormLi);
                    }


                }

                //создаем экзепляры вопросов и ответов
//
                var questionObj = new Survey({
                        nameDomEl: 'вопрос',
                        collectionHolder: $('.questions'),
                        domElClass: 'question',
                        domElementsClass: 'questions',
                        prototypeAttr: 'prototype-question',
                        prototypeName: '__question_prot__',
                        minDomEl: 1,
                })
//

                $('.answers').each(function () {
                        var answersObj = new Survey({
                                nameDomEl: 'ответ',
                                collectionHolder: $(this),
                                domElClass: 'answer',
                                domElementsClass: 'answers',
                                prototypeAttr: 'prototype',
                                prototypeName: '__answer_prot__',
                                minDomEl: 2,
                        })
                })


        </script>
</div>
</div>





{% endblock %}
