{% extends 'base.html.twig' %}

{% block title %}Hello SurveyController!{% endblock %}

{% block body %}

<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>


<div class="example-wrapper">

        {{ form_start(form) }}
        {{ form_row(form.title) }}
        {{ form_row(form.status) }}
        {{ form_errors(form) }}

        {#<ul class="questions answers" data-prototype_answer="{{ form_widget(form.questions.vars.prototype.answers.vars.prototype)|e() }}"#}
            {#data-prototype_question="{{ form_widget(form.questions.vars.prototype)|e() }}"></ul>#}
        <ul class="questions"
            data-prototype-answer="{{ form_widget(form.questions.vars.prototype.children['answers'].vars.prototype)|e }}"
            data-prototype-question="{{ form_widget(form.questions.vars.prototype)|e }}">
            {% for question in form.questions %}
                <li  class="question" style="margin-top: 20px">
                        {{ form_row(question.text) }}
                        {{ form_row(question.type) }}
                        {{ form_row(question.required) }}
                        <ul class="answers" data-prototype="{{ form_widget(question.answers.vars.prototype)|e }}">
                                {% for answer in question.answers %}
                                        <div class="answer">{{ form_row(answer.text) }}</div>
                                {% endfor %}
                        </ul>
                </li>
            {% endfor %}
        </ul>

    {{ form_end(form) }}



        <script>

                function Survey(params) {
                //сохраняем контекст в переменную и делаем ссылку добавления полей
                        var they = this;

                        var $linkAdd = $('<a style="margin-top: 20px;" ef="#" class="add_link"><button>Добавить '+ params.nameDomEl +'</button></a>');
                        var $newLinkLi = $('<li></li>').append($linkAdd);
                //добавляем ссылку удаления элементам, которые можно удалять
                        params.collectionHolder.each(function () {
                                $(this).find('.' + params.domElClass).each(function(i) {
                                        if (i > params.minDomEl) {
                                                this.addFormDeleteLink($(this));
                                        }
                                })
                        });
                //добавляем ссылку добавления
                        params.collectionHolder.each(function() {
                                $(this).append($newLinkLi);
                        })
                //сохраняем в индекс количество дочерних элементов
                        params.collectionHolder.each(function () {
                                $(this).data('index', $(this).find('.' + params.domElClass).length);
                        })
                //при клике добавляем ещё один элемент формы
                        $linkAdd.on('click', function(e) {
                                e.preventDefault();
                                they.addForm($(this).parents('.' + params.domElementsClass), $newLinkLi);

                                // var answersObj = new Survey({
                                //         nameDomEl: 'ответ',
                                //         collectionHolder: $('ul.answers'),
                                //         domElClass: 'answer',
                                //         domElementsClass: 'answers',
                                //         prototypeAttr: 'prototype',
                                //         prototypeName: '__answer_prot__',
                                //         minDomEl: 2,
                                // });
                        });


                //получаем и инкрементируем прототип коллекции
                    this.addForm = function() {
                        //проверяем не является ли экземпляром создания ответа
                        if (params.collectionHolder.data(params.prototypeAttr)) {
                            var prototype = params.collectionHolder.data(params.prototypeAttr);
                        } else {
                            var prototype = params.prototype_data;
                        }
                        var index = params.collectionHolder.data('index');
                        var newForm = prototype;
                        params.collectionHolder.data('index', index + 1);
                //добавляем значение индекса в имена дочерхних полей портотипа, для новых вопросов добавляем сразу 2 прототипа ответа
                        var $newFormLi;
                        if (params.domElClass === 'question') {
                                var prototypeAnsw = params.collectionHolder.data('prototype-answer')
                                var intanceAnsw1 = prototypeAnsw.replace(new RegExp(params.prototypeName,'g'), index).replace(new RegExp('__answer_prot__', 'g'), 0);
                                var intanceAnsw2 = prototypeAnsw.replace(new RegExp(params.prototypeName,'g'), index).replace(new RegExp('__answer_prot__', 'g'), 1);
                                var ulAnswersPlus2Answers = $('<ul class="answers"></ul>').append(intanceAnsw1).append(intanceAnsw2);
                                ulAnswersPlus2Answers.children().each(function() {
                                    $(this).addClass('answer');
                                });
                                newForm = newForm.replace(new RegExp(params.prototypeName, 'g'), index);
                                params.collectionHolder.data('index', index + 1);
                                $newFormLi = $('<li></li>').append(newForm).addClass(params.domElClass).append(ulAnswersPlus2Answers);
                                //новый объект создания ответов в вопросах по клику
                                var newAnswersObj = new Survey({
                                        nameDomEl: 'ответ',
                                        collectionHolder: $newFormLi.find('ul.answers'),
                                        domElClass: 'answer',
                                        domElementsClass: 'answers',
                                        prototypeAttr: 'prototype-answer',
                                        prototype_data: prototypeAnsw,
                                        prototypeName: '__answer_prot__',
                                        questionIndex: index,
                                        questionPrototypeName: params.prototypeName,
                                        minDomEl: 2,
                                });


                        } else {
                                if(params.questionPrototypeName) {
                                    newForm = newForm.replace(new RegExp(params.questionPrototypeName, 'g'), params.questionIndex);
                                }
                                newForm = newForm.replace(new RegExp(params.prototypeName, 'g'), index);
                                params.collectionHolder.data('index', index + 1);
                                $newFormLi = $('<li></li>').append(newForm).addClass(params.domElClass);
                        }
                //добавляем в форму новые поля и ссылку на их удаление
                        $newLinkLi.before($newFormLi);
                        this.addFormDeleteLink($newFormLi);
                    }

                    this.addFormDeleteLink = function(newFormLi) {
                //создаем ссылку удаления
                        var $removeFormLink = $('<a style="float: right; margin-top: -45px" href="#"><button>Удалить '+ params.nameDomEl +'</button></a>');
                        newFormLi.append($removeFormLink);
                //удаляем поля при клике на неё
                        $removeFormLink.on('click', function(e) {
                            e.preventDefault();
                            newFormLi.remove();
                        });
                    }
                }
                //создаем экзепляры вопроса и ответа

                var questionObj = new Survey({
                        nameDomEl: 'вопрос',
                        collectionHolder: $('ul.questions'),
                        domElClass: 'question',
                        domElementsClass: 'questions',
                        prototypeAttr: 'prototype-question',
                        prototypeName: '__question_prot__',
                        minDomEl: 1,
                });
                var answersObj = new Survey({
                        nameDomEl: 'ответ',
                        collectionHolder: $('ul.answers'),
                        domElClass: 'answer',
                        domElementsClass: 'answers',
                        prototypeAttr: 'prototype',
                        prototypeName: '__answer_prot__',
                        minDomEl: 2,
                });

        </script>
</div>
</div>





{% endblock %}
